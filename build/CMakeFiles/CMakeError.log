Determining if the pthread_create exist failed with the following output:
Change Dir: /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_59596/fast"
/usr/bin/make -f CMakeFiles/cmTC_59596.dir/build.make CMakeFiles/cmTC_59596.dir/build
make[1]: 进入目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_59596.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_59596.dir/CheckSymbolExists.c.o   -c /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_59596
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_59596.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_59596.dir/CheckSymbolExists.c.o  -o cmTC_59596 
CMakeFiles/cmTC_59596.dir/CheckSymbolExists.c.o：在函数‘main’中：
CheckSymbolExists.c:(.text+0x1b)：对‘pthread_create’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_59596.dir/build.make:97: recipe for target 'cmTC_59596' failed
make[1]: *** [cmTC_59596] Error 1
make[1]: 离开目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_59596/fast' failed
make: *** [cmTC_59596/fast] Error 2

File /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_dd48a/fast"
/usr/bin/make -f CMakeFiles/cmTC_dd48a.dir/build.make CMakeFiles/cmTC_dd48a.dir/build
make[1]: 进入目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_dd48a.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_dd48a.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.10/Modules/CheckFunctionExists.c
Linking C executable cmTC_dd48a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd48a.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    -rdynamic CMakeFiles/cmTC_dd48a.dir/CheckFunctionExists.c.o  -o cmTC_dd48a -lpthreads 
/usr/bin/ld: 找不到 -lpthreads
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_dd48a.dir/build.make:97: recipe for target 'cmTC_dd48a' failed
make[1]: *** [cmTC_dd48a] Error 1
make[1]: 离开目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_dd48a/fast' failed
make: *** [cmTC_dd48a/fast] Error 2


Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_97118/fast && /usr/bin/make  -f CMakeFiles/cmTC_97118.dir/build.make CMakeFiles/cmTC_97118.dir/build
make[1]: 进入目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_97118.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_97118.dir/src.c.o   -c /home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_97118
/home/xrf/clion/CLion-2020.3.1/clion-2020.3.1/bin/cmake/linux/bin/cmake -E cmake_link_script CMakeFiles/cmTC_97118.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD    -rdynamic CMakeFiles/cmTC_97118.dir/src.c.o  -o cmTC_97118 
CMakeFiles/cmTC_97118.dir/src.c.o：在函数‘main’中：
src.c:(.text+0x3e)：对‘pthread_create’未定义的引用
src.c:(.text+0x4a)：对‘pthread_detach’未定义的引用
src.c:(.text+0x56)：对‘pthread_cancel’未定义的引用
src.c:(.text+0x67)：对‘pthread_join’未定义的引用
src.c:(.text+0x7b)：对‘pthread_atfork’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_97118.dir/build.make:106: recipe for target 'cmTC_97118' failed
make[1]: *** [cmTC_97118] Error 1
make[1]: 离开目录“/home/xrf/catkin_ws/build/CMakeFiles/CMakeTmp”
Makefile:141: recipe for target 'cmTC_97118/fast' failed
make: *** [cmTC_97118/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

